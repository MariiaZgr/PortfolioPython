name: Django-app workflow

on: [push]

jobs:
  tests:
    # «Раннер» — создание изолированного окружения с последней версией Ubuntu 
    runs-on: ubuntu-latest

    steps:
    # Запуск actions checkout — готового скрипта 
    # для клонирования репозитория
    - uses: actions/checkout@v2
    - name: Set up Python
      # Запуск actions setup-python — готового скрипта 
      # для развёртывания окружения Python
      uses: actions/setup-python@v2
      with:
        # Выбор версии Python
        python-version: 3.7

    - name: Install dependencies
      run: |
        # обновление pip
        python -m pip install --upgrade pip
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r ./api_yamdb/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
        pytest
        # перейти в папку, содержащую manage.py — 
        #<корневая_папка_infra_actions>/<папка_проекта>/manage.py
        cd ./api_yamdb
        # запустить написанные разработчиком тесты
        python manage.py test

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          # Проверка доступности репозитория Docker Hub для workflow
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          # Вызов сборщика контейнеров docker
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          # Запуск скрипта авторизации на Docker Hub
          uses: docker/login-action@v1 
          with:
            username: ${{ vars.DOCKERHUB_LOGIN }}
            password: ${{ secrets.DOCKERHUB_PASS }}
        - name: Push to Docker Hub
          # Пуш образа в Docker Hub 
          uses: docker/build-push-action@v2 
          with:
            context: ./api_yamdb
            push: true
            tags: ${{ vars.DOCKERHUB_LOGIN }}/ys_python:yamdb
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.DEPLOY_IP }}
          username: ${{ vars.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH }}
          script: |
            # cd to this project's server-specific subfolder.
            cd ./yamdb_final_local
            # Login to private repo prior to pull.
            docker login --username ${{ vars.DOCKERHUB_LOGIN }} --password ${{ secrets.DOCKERHUB_PASS }}
            # Stop currently running composition
            docker-compose stop
            # Refresh web container on composition
            docker-compose rm web
            # Recreate env with latest pipeline config
            rm -rf ./.env
            touch .env
            echo DB_ENGINE=${{ vars.DB_ENGINE }} >> .env
            echo DB_NAME=${{ vars.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ vars.DB_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.DB_PASS }} >> .env
            echo DB_HOST=${{ vars.DB_HOST }} >> .env
            echo DB_PORT=${{ vars.DB_PORT }} >> .env
            # launch composition again
            docker-compose up -d
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ vars.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!